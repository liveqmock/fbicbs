package cbs.repository.account.other.dao;

import cbs.repository.account.ext.domain.BatchBookVO;
import cbs.repository.account.other.model.Acttvc;
import cbs.repository.account.other.model.ActtvcExample;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Update;

import java.util.List;

public interface ActtvcMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTTVC
     *
     * @mbggenerated Sun Nov 21 21:36:06 CST 2010
     */
    int countByExample(ActtvcExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTTVC
     *
     * @mbggenerated Sun Nov 21 21:36:06 CST 2010
     */
    int deleteByExample(ActtvcExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTTVC
     *
     * @mbggenerated Sun Nov 21 21:36:06 CST 2010
     */
    int insert(Acttvc record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTTVC
     *
     * @mbggenerated Sun Nov 21 21:36:06 CST 2010
     */
    int insertSelective(Acttvc record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTTVC
     *
     * @mbggenerated Sun Nov 21 21:36:06 CST 2010
     */
    List<Acttvc> selectByExample(ActtvcExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTTVC
     *
     * @mbggenerated Sun Nov 21 21:36:06 CST 2010
     */
    int updateByExampleSelective(@Param("record") Acttvc record, @Param("example") ActtvcExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACTTVC
     *
     * @mbggenerated Sun Nov 21 21:36:06 CST 2010
     */
    int updateByExample(@Param("record") Acttvc record, @Param("example") ActtvcExample example);


    //=======================================================
    /**
     * zhanrui  获取当前套内最大序号
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @return
     */
    Integer selectMaxSetseq(@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum, @Param("vchset")short vchset);

    /**
     * zhanrui  获取当前套所有有效的记录数
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @return
     */
    Integer countValidRecordOfVchset(@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum, @Param("vchset")short vchset);

    /**
     * zhanrui  获取当前套的所有记录数
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @return
     */
    Integer countAllRecordOfVchset(@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum, @Param("vchset")short vchset);

    /**
     * zhanrui 计算本套内借方总金额
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @return
     */
    Long selectTotalDebitAmt(@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum, @Param("vchset")short vchset);

    /**
     * zhanrui 计算本套内贷方总金额
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @return
     */
    Long selectTotalCreditAmt(@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum, @Param("vchset")short vchset);


    /**
     * zhanrui 分页查询接口
     * @param minnum  起始记录数 （大于等于）
     * @param maxnum  终止记录数  （小于）
     * @param orgidt  机构号
     * @param tlrnum  柜员号
     * @param vchset  套号
     * @return
     */
    List<Acttvc> selectPagedRecords(@Param("minnum")int minnum, @Param("maxnum")int maxnum,
                                    @Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum, @Param("vchset")short vchset);

    /**
     * zhanrui 查询待处理传票集
     * @param sysidt
     * @param orgidt
     * @param tlrnum
     * @return
     */
    List<BatchBookVO> selectMultiVchsetRecords(@Param("sysidt")String sysidt,@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum);

    /**
     * zhanrui 查询待处理传票集
     * @param sysidt
     * @param orgidt
     * @param tlrnum
     * @return
     */
    List<BatchBookVO> selectOneVchsetRecords(@Param("sysidt")String sysidt,@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum, @Param("vchset")short vchset);

    /**
     * zhanrui 根据套号查询套内所有 有效 记录
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @return
     */
    List<Acttvc> selectValidRecordByVchset(@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum,@Param("vchset")short vchset);

    /**
     * 2011-11-24 haiyu 获取所有为套平临时数据（跨柜员、套号）*/
    List<Acttvc> selectAllRecordByVchsts(@Param("orgidt") String orgidt,@Param("cusidt") String cusidt,@Param("apcode") String apcode,
                                         @Param("curcde") String curcde);

    /***/
    List<Acttvc> selectAllRecordByActnoAndVchset(@Param("orgidt") String orgidt,@Param("cusidt") String cusidt,@Param("apcode") String apcode,
                                                 @Param("curcde") String curcde,@Param("tlrnum") String tlrnum,@Param("vchset") short vchset);
    /**
     * zhanrui 根据套号查询套内所有 （包括有效/无效） 记录
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @return
     */
    List<Acttvc> selectAllRecordByVchset(@Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum,@Param("vchset")short vchset);

    /**
     * zhanrui  更新单笔 vchsts
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @param setseq
     * @return
     */
    @Update("update  acttvc set vchsts = #{vchsts} where orgidt=#{orgidt} and tlrnum = #{tlrnum} and vchset = #{vchset} and setseq = #{setseq} ")
    int  updateOneVchsts(@Param("vchsts")String vchsts, @Param("orgidt")String orgidt, @Param("tlrnum")String tlrnum, @Param("vchset")short vchset, @Param("setseq")short setseq);

    /**
     * zhanrui  更新整套 vchsts
     * @param vchsts    新状态
     * @param orgidt
     * @param tlrnum
     * @param vchset
     * @param recsts
     * @param oldvchsts  原记录状态
     * @return
     */
    @Update("update  acttvc set vchsts = #{vchsts} " +
            "where orgidt = #{orgidt} and tlrnum = #{tlrnum} and vchset = #{vchset} " +
            "and recsts = #{recsts} " +
            "and vchsts = #{oldvchsts}")
    int  updateMultiRecordsVchsts(@Param("vchsts")String vchsts,
                                         @Param("orgidt")String orgidt,
                                         @Param("tlrnum")String tlrnum,
                                         @Param("vchset")short vchset,
                                         @Param("recsts")String recsts,
                                         @Param("oldvchsts")String oldvchsts);
}