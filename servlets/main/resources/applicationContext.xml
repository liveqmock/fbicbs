<?xml version="1.0" encoding="UTF-8"?>

<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation=" http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
             http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <context:property-placeholder location="classpath:fbicbs.properties"/>

    <!-- 配置数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${pub.platform.db.ConnectionManager.sDBDriver}"/>
        <property name="url" value="${pub.platform.db.ConnectionManager.sConnStr}"/>
        <property name="username" value="${pub.platform.db.ConnectionManager.user}"/>
        <property name="password" value="${pub.platform.db.ConnectionManager.passwd}"/>
    </bean>


    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>


    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->
    <context:component-scan base-package="cbs.batch.ac,cbs.batch.common,cbs.batch.report,cbs.repository"/>

    <!-- enable autowire -->
    <!--<context:annotation-config/>-->

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven/>

    <!-- define the SqlSessionFactory, notice that configLocation is not needed when you use MapperFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:cbs/repository/code/mapper/ActevcMapper.xml"/>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="cbs.batch.ac,
                  cbs.repository.account.maininfo.dao,
                  cbs.repository.account.billinfo.dao,
                  cbs.repository.account.other.dao,
                  cbs.repository.account.tempinfo.dao,
                  cbs.repository.code.dao,
                  cbs.repository.customer.dao,
                  cbs.repository.platform.dao"/>
    </bean>

<!--
    <bean id="transactionProxyCreator"
          class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <value>*Handler</value>
        </property>
        <property name="proxyTargetClass">
            <value>true</value>
        </property>
        <property name="interceptorNames">
            <list>
                <value>org.springframework.aop.interceptor.CustomizableTraceInterceptor</value>
                <value>org.springframework.transaction.interceptor.TransactionInterceptor</value>
            </list>
        </property>
    </bean>
-->

    <!--<bean id="systemBlockStatusLogic" class="cbs.batch.common.SystemBlockStatusLogic"/>-->

    <!--<bean id="cbs.batch.ac.bcb8523.BCB8523Handler" class="cbs.batch.ac.bcb8523.BCB8523Handler" />-->

</beans>
